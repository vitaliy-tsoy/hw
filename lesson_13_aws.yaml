---
- name: create AWS instances
  hosts: local
  connection: local
  gather_facts: false
  become: true
  become_user: root
  remote_user: ubuntu

  vars:
    keypair: my-key3
    instance_type: t2.micro
    image: ami-0d527b8c289b4af7f
    region: eu-central-1
    count: 2
    security_group: EC2SecurityGroup4
    aws_access_key: 
    aws_secret_key: 

  tasks:
    - name: Create a security group
      ec2_group:
        name: "{{ security_group }}"
        description: Security Group for Dev and Prod servers
        region: "{{ region }}"
        rules:
          - proto: all
            from_port: -1
            to_port: -1
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"

    - name: Create AWS Servers
      ec2:
        key_name: "{{ keypair }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        group: "{{ security_group }}"
        region: "{{ region }}"
        count: "{{ count }}"
        wait: true
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
      register: ec2

    - name: print all ec2 variables
      debug: var=ec2

    - name: Add Dev instance to host groups
      add_host:
        hostname: "{{ ec2.instances[0].public_ip }}"
        groupname: dev

    - name: Add Prod instance to host groups
      add_host:
        hostname: "{{ ec2.instances[1].public_ip }}"
        groupname: prod

    - name: wait for SSH
      wait_for:
        state: started
        host: "{{ item .public_ip }}"
        port: 22
        delay: 60
        timeout: 320
      with_items: "{{ ec2.instances }}"

- name: Connect to dev
  hosts: dev
  become: true
  become_user: root
  remote_user: ubuntu

  vars:
    aws_access_key: 
    aws_secret_key: 

  tasks:
    - name: update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes

    - name: install pip3
      apt:
        force_apt_get: yes
        name: python3-pip
        install_recommends: yes
        state: latest

    - name: install boto3
      pip:
        name: boto3
        state: latest
        
    - name: install maven
      apt:
        name: maven
        state: present

    - name: install git
      apt:
        name: git
        state: present

    - name: clone a github repository of Boxfuse
      git:
        repo: https://github.com/boxfuse/boxfuse-sample-java-war-hello.git
        dest: /home/ubuntu/boxfuse2/
        clone: yes
        update: yes

    - name: maven
      command: mvn package
      args:
        chdir: /home/ubuntu/boxfuse2/

    - name: upload java app file
      aws_s3:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        bucket: mybacket73.test5.com
        object: /hello-1.0.war
        src: /home/ubuntu/boxfuse2/target/hello-1.0.war
        mode: put

- name: Connect to prod
  hosts: prod
  become: true
  become_user: root
  remote_user: ubuntu

  vars:
    aws_access_key: 
    aws_secret_key: 

  tasks:
    - name: update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes

    - name: install pip
      apt:
        force_apt_get: yes
        name: python3-pip
        install_recommends: yes
        state: latest

    - name: install boto3
      pip:
        name: boto3
        state: latest

    - name: install git
      apt:
        name: git
        state: present

    - name: install java
      apt:
        name: default-jdk
        state: present

    - name: install tomcat
      apt:
        name: tomcat9
        state: present

    - name: tomcat start
      service:
        name: tomcat9
        state: started

    - name: download and deploy java app
      aws_s3:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        bucket: mybacket73.test5.com
        object: /hello-1.0.war
        dest: /var/lib/tomcat9/webapps/hello-1.0.war
        mode: get
